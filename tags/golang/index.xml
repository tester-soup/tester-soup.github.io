<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>golang on Zerlinda‘s blog</title>
    <link>https://earchou123.github.io/tags/golang/</link>
    <description>Recent content in golang on Zerlinda‘s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 09 Mar 2023 18:17:47 +0800</lastBuildDate><atom:link href="https://earchou123.github.io/tags/golang/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Go（十三）文件操作</title>
      <link>https://earchou123.github.io/post/go13/</link>
      <pubDate>Thu, 09 Mar 2023 18:17:47 +0800</pubDate>
      
      <guid>https://earchou123.github.io/post/go13/</guid>
      <description>&lt;!-- raw HTML omitted --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#%E6%96%87%E4%BB%B6%E6%93%8D%E4%BD%9C&#34;&gt;文件操作&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E8%AF%BB%E5%8F%96%E6%96%87%E4%BB%B6&#34;&gt;读取文件&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#osread%E8%AF%BB%E5%8F%96%E6%96%87%E4%BB%B6&#34;&gt;os.Read读取文件&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E4%BD%BF%E7%94%A8bufio%E8%AF%BB%E5%8F%96%E6%96%87%E4%BB%B6&#34;&gt;使用bufio读取文件&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E4%BD%BF%E7%94%A8ioutil%E8%AF%BB%E5%8F%96%E6%96%87%E4%BB%B6&#34;&gt;使用ioutil读取文件&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E5%86%99%E5%85%A5%E6%96%87%E4%BB%B6&#34;&gt;写入文件&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#oswrite%E5%86%99%E5%85%A5%E6%96%87%E4%BB%B6&#34;&gt;os.Write写入文件&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E4%BD%BF%E7%94%A8bufio%E5%86%99%E5%85%A5%E6%96%87%E4%BB%B6&#34;&gt;使用bufio写入文件&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E4%BD%BF%E7%94%A8ioutil%E5%86%99%E5%85%A5%E6%96%87%E4%BB%B6&#34;&gt;使用ioutil写入文件&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E6%96%87%E4%BB%B6copy&#34;&gt;文件copy&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;h2 id=&#34;文件操作&#34;&gt;文件操作&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;文件在程序中是以流的形式来操作的&lt;/li&gt;
&lt;li&gt;os.File封装所有文件操作&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>Go（十二）面向对象编程</title>
      <link>https://earchou123.github.io/post/go12/</link>
      <pubDate>Thu, 09 Mar 2023 18:17:40 +0800</pubDate>
      
      <guid>https://earchou123.github.io/post/go12/</guid>
      <description>&lt;!-- raw HTML omitted --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1&#34;&gt;面向对象&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E5%B7%A5%E5%8E%82%E6%A8%A1%E5%BC%8F&#34;&gt;工厂模式&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E4%B8%89%E5%A4%A7%E7%89%B9%E6%80%A7-%E5%B0%81%E8%A3%85&#34;&gt;面向对象三大特性-封装&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E4%B8%89%E5%A4%A7%E7%89%B9%E6%80%A7-%E7%BB%A7%E6%89%BF&#34;&gt;面向对象三大特性-继承&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E4%B8%89%E5%A4%A7%E7%89%B9%E6%80%A7-%E5%A4%9A%E6%80%81&#34;&gt;面向对象三大特性-多态&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#%E6%8E%A5%E5%8F%A3%E5%AE%9A%E4%B9%89&#34;&gt;接口定义&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E6%8E%A5%E5%8F%A3%E5%AE%9E%E7%8E%B0%E5%A4%9A%E6%80%81&#34;&gt;接口实现多态&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E7%A9%BA%E6%8E%A5%E5%8F%A3%E7%9A%84%E5%BA%94%E7%94%A8&#34;&gt;空接口的应用&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;h2 id=&#34;面向对象&#34;&gt;面向对象&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;go没有class，可以通过结构体自定义数据类型，来代表一类事物&lt;/li&gt;
&lt;li&gt;结构体变量是具体的，代表一个具体变量&lt;/li&gt;
&lt;li&gt;结构体字段 = 属性&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>Go（十一） defer</title>
      <link>https://earchou123.github.io/post/go11/</link>
      <pubDate>Thu, 09 Mar 2023 18:17:35 +0800</pubDate>
      
      <guid>https://earchou123.github.io/post/go11/</guid>
      <description>&lt;h2 id=&#34;defer官网解释&#34;&gt;defer官网解释&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://go.dev/ref/spec#Defer_statements&#34;&gt;https://go.dev/ref/spec#Defer_statements&lt;/a&gt; .&lt;br&gt;
&lt;code&gt;DeferStmt = &amp;quot;defer&amp;quot; Expression .&lt;/code&gt; .&lt;/p&gt;
&lt;h3 id=&#34;总结&#34;&gt;总结：&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;defer延迟执行，会在周围函数执行完之前执行&lt;/li&gt;
&lt;li&gt;defer表达式必须是函数或方法调用&lt;/li&gt;
&lt;li&gt;每一次调用defer都会把周围函数的值、参数进行赋值和重新存储一遍，但实际的函数不会被执行&lt;/li&gt;
&lt;li&gt;defer语句执行按照先进后出的顺序&lt;/li&gt;
&lt;li&gt;如果函数设置了return语句，defer会在执行return语句赋值（此处return赋值但不执行）之后，再执行。但会在函数结束之前执行&lt;/li&gt;
&lt;li&gt;如果defer是一个匿名函数，且周围函数的返回值有一个命名的变量，defer可以在匿名函数中修改和访问周围函数的返回值&lt;/li&gt;
&lt;/ol&gt;</description>
    </item>
    
    <item>
      <title>Go（十）函数</title>
      <link>https://earchou123.github.io/post/go10/</link>
      <pubDate>Thu, 09 Mar 2023 18:17:27 +0800</pubDate>
      
      <guid>https://earchou123.github.io/post/go10/</guid>
      <description>&lt;!-- raw HTML omitted --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#%E5%87%BD%E6%95%B0%E5%AE%9A%E4%B9%89&#34;&gt;函数定义&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E5%8F%82%E6%95%B0%E4%BC%A0%E9%80%92&#34;&gt;参数传递&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E4%BD%9C%E7%94%A8%E5%9F%9F&#34;&gt;作用域&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E5%87%BD%E6%95%B0%E7%9A%84%E9%80%92%E5%BD%92&#34;&gt;函数的递归&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E5%8C%85&#34;&gt;包&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#init%E5%87%BD%E6%95%B0&#34;&gt;init函数&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E5%8C%BF%E5%90%8D%E5%87%BD%E6%95%B0&#34;&gt;匿名函数&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E9%97%AD%E5%8C%85&#34;&gt;闭包&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E5%87%BD%E6%95%B0%E7%9A%84defer&#34;&gt;函数的defer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E6%97%B6%E9%97%B4%E7%9B%B8%E5%85%B3%E5%87%BD%E6%95%B0&#34;&gt;时间相关函数&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E5%86%85%E7%BD%AE%E5%87%BD%E6%95%B0&#34;&gt;内置函数&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E9%94%99%E8%AF%AF%E5%A4%84%E7%90%86-defer-panic-recover&#34;&gt;错误处理 defer panic recover&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E7%BB%83%E4%B9%A0&#34;&gt;练习&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#%E6%96%90%E6%B3%A2%E9%82%A3%E5%A5%91%E6%95%B0%E5%88%97&#34;&gt;斐波那契数列👇&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E7%8C%B4%E5%AD%90%E5%90%83%E6%A1%83%E9%97%AE%E9%A2%98%E9%80%92%E5%BD%92&#34;&gt;猴子吃桃问题（递归）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#makesuffixsuffix-string%E9%97%AD%E5%8C%85&#34;&gt;makeSuffixsuffix string闭包&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;h2 id=&#34;函数定义&#34;&gt;函数定义&lt;/h2&gt;
&lt;p&gt;完成某一功能的程序指令的集合&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-dotnetcli&#34; data-lang=&#34;dotnetcli&#34;&gt;func 函数名(形参列表)(返回值列表){
    执行语句
    return 返回值列表
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;return语句可以省略，也可以返回多个值。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Go（九）方法</title>
      <link>https://earchou123.github.io/post/go9/</link>
      <pubDate>Thu, 09 Mar 2023 18:17:22 +0800</pubDate>
      
      <guid>https://earchou123.github.io/post/go9/</guid>
      <description>&lt;!-- raw HTML omitted --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#%E6%96%B9%E6%B3%95%E5%AE%9A%E4%B9%89%E5%92%8C%E5%A3%B0%E6%98%8E&#34;&gt;方法定义和声明&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E4%BE%8B%E5%AD%90&#34;&gt;例子&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E7%BB%83%E4%B9%A0&#34;&gt;练习&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#%E5%AE%9A%E4%B9%89%E8%AE%A1%E7%AE%97%E5%99%A8%E7%BB%93%E6%9E%84%E4%BD%93calcuator%E5%AE%9E%E7%8E%B0%E5%8A%A0%E5%87%8F%E4%B9%98%E9%99%A4&#34;&gt;定义计算器结构体Calcuator，实现加减乘除&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E7%BC%96%E5%86%99%E6%96%B9%E6%B3%95%E4%BD%BF%E7%BB%99%E5%AE%9A%E7%9A%84%E4%BA%8C%E7%BB%B4%E6%95%B0%E7%BB%8433%E8%BD%AC%E7%BD%AE&#34;&gt;编写方法，使给定的二维数组（3*3）转置。&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E9%98%85%E8%AF%BB%E4%BB%A5%E4%B8%8B%E4%BB%A3%E7%A0%81%E5%86%99%E5%87%BA%E6%89%93%E5%8D%B0%E7%BB%93%E6%9E%9C&#34;&gt;阅读以下代码，写出打印结果&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;h2 id=&#34;方法定义和声明&#34;&gt;方法定义和声明&lt;/h2&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;func (recevier type)methodName(参数列表)(返回值列表){
    方法体
    return
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;作用在指定的数据类型上的，和指定数据类型绑定。因此自定义类型都可以有方法。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Go（八）struct结构体</title>
      <link>https://earchou123.github.io/post/go8/</link>
      <pubDate>Thu, 09 Mar 2023 18:17:15 +0800</pubDate>
      
      <guid>https://earchou123.github.io/post/go8/</guid>
      <description>&lt;!-- raw HTML omitted --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#%E7%BB%93%E6%9E%84%E4%BD%93%E5%AE%9A%E4%B9%89&#34;&gt;结构体定义&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E7%BB%93%E6%9E%84%E4%BD%93%E7%9A%84%E5%86%85%E5%AD%98%E5%B8%83%E5%B1%80&#34;&gt;结构体的内存布局&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E7%BB%93%E6%9E%84%E4%BD%93%E7%9A%84%E6%AF%94%E8%BE%83&#34;&gt;结构体的比较&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E7%BB%93%E6%9E%84%E4%BD%93%E7%9A%84%E8%BD%AC%E6%8D%A2&#34;&gt;结构体的转换&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E7%BB%93%E6%9E%84%E4%BD%93%E7%9A%84%E5%B5%8C%E5%A5%97%E5%92%8C%E5%8C%BF%E5%90%8D%E6%88%90%E5%91%98&#34;&gt;结构体的嵌套和匿名成员&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#tips&#34;&gt;Tips&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;h2 id=&#34;结构体定义&#34;&gt;结构体定义&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;结构体是自定义数据，代表一类事物&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;type&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;结构体名称&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;struct&lt;/span&gt;{
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;字段&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;type&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;字段&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;type&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Go（七）Map</title>
      <link>https://earchou123.github.io/post/go7/</link>
      <pubDate>Thu, 09 Mar 2023 18:16:50 +0800</pubDate>
      
      <guid>https://earchou123.github.io/post/go7/</guid>
      <description>&lt;!-- raw HTML omitted --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#map%E5%AE%9A%E4%B9%89&#34;&gt;map定义&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#map%E5%A2%9E%E5%88%A0%E6%94%B9%E6%9F%A5&#34;&gt;map增删改查&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#%E5%A2%9E%E5%8A%A0%E4%BF%AE%E6%94%B9&#34;&gt;增加/修改&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E5%88%A0%E9%99%A4&#34;&gt;删除&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E6%9F%A5%E6%89%BE&#34;&gt;查找&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#map%E9%81%8D%E5%8E%86&#34;&gt;map遍历&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#map%E5%88%87%E7%89%87&#34;&gt;map切片&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#map%E6%8E%92%E5%BA%8F&#34;&gt;map排序&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#tips&#34;&gt;Tips&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;h2 id=&#34;map定义&#34;&gt;map定义&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;map[Key]Value&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;key可以是bool、数字、string、指针、channel，也可以是包含这几种类型的接口、结构体、数组&lt;/li&gt;
&lt;li&gt;key必须是支持==运算的类型。不支持slice、map、function&lt;/li&gt;
&lt;li&gt;key避免使用浮点数。可能出现NaN或者浮点数不相等的情况。&lt;/li&gt;
&lt;li&gt;Value值没有限制&lt;/li&gt;
&lt;li&gt;key不能重复&lt;/li&gt;
&lt;li&gt;key是无序的&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>Go（六）数组&amp;切片</title>
      <link>https://earchou123.github.io/post/go6/</link>
      <pubDate>Thu, 09 Mar 2023 18:15:30 +0800</pubDate>
      
      <guid>https://earchou123.github.io/post/go6/</guid>
      <description>&lt;!-- raw HTML omitted --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#%E6%95%B0%E7%BB%84&#34;&gt;数组&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#%E6%95%B0%E7%BB%84%E5%AE%9A%E4%B9%89&#34;&gt;数组定义&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E6%95%B0%E7%BB%84%E7%9A%84%E4%BD%BF%E7%94%A8&#34;&gt;数组的使用&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E6%95%B0%E7%BB%84%E7%9A%84%E6%AF%94%E8%BE%83&#34;&gt;数组的比较&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E6%95%B0%E7%BB%84%E7%9A%84%E5%86%85%E5%AD%98%E5%B8%83%E5%B1%80&#34;&gt;数组的内存布局&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#tips&#34;&gt;Tips&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E7%BB%83%E4%B9%A0&#34;&gt;练习&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#%E5%88%9B%E5%BB%BA%E4%B8%80%E4%B8%AAbyte%E7%B1%BB%E5%9E%8B%E7%9A%8426%E4%B8%AA%E5%85%83%E7%B4%A0%E7%9A%84%E6%95%B0%E7%BB%84%E5%88%86%E5%88%AB%E6%94%BE%E7%BD%AEa-z%E4%BD%BF%E7%94%A8for%E5%BE%AA%E7%8E%AF%E8%AE%BF%E9%97%AE%E6%89%80%E6%9C%89%E5%85%83%E7%B4%A0%E5%B9%B6%E6%89%93%E5%8D%B0&#34;&gt;创建一个byte类型的26个元素的数组，分别放置‘A’-‘Z’。使用for循环访问所有元素并打印。&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E6%B1%82%E5%87%BA%E6%95%B0%E7%BB%84%E6%9C%80%E5%A4%A7%E5%80%BC%E5%8F%8A%E5%85%B6%E4%B8%8B%E6%A0%87&#34;&gt;求出数组最大值，及其下标&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E9%9A%8F%E6%9C%BA%E7%94%9F%E6%88%905%E4%B8%AA%E6%95%B0%E5%B9%B6%E5%B0%86%E5%85%B6%E5%8F%8D%E8%BD%AC%E6%89%93%E5%8D%B0&#34;&gt;随机生成5个数，并将其反转打印&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E5%88%87%E7%89%87&#34;&gt;切片&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#%E5%88%87%E7%89%87%E5%AE%9A%E4%B9%89&#34;&gt;切片定义&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E5%88%87%E7%89%87%E7%9A%84%E8%AE%BF%E9%97%AE%E9%81%8D%E5%8E%86&#34;&gt;切片的访问、遍历&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E5%88%87%E7%89%87%E8%A1%A8%E8%BE%BE%E5%BC%8F&#34;&gt;切片表达式&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#append%E5%8A%A8%E6%80%81%E8%BF%BD%E5%8A%A0&#34;&gt;append动态追加&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E4%BB%8E%E5%88%87%E7%89%87%E4%B8%AD%E5%88%A0%E9%99%A4%E5%85%83%E7%B4%A0&#34;&gt;从切片中删除元素&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E5%88%87%E7%89%87%E7%9A%84%E6%8B%B7%E8%B4%9D&#34;&gt;切片的拷贝&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#string%E5%92%8Cbyte&#34;&gt;string和byte&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E5%88%87%E7%89%87%E6%89%A9%E5%AE%B9&#34;&gt;切片扩容&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#tips&#34;&gt;Tips&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E7%BB%83%E4%B9%A0&#34;&gt;练习&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#%E6%96%90%E6%B3%A2%E9%82%A3%E5%A5%91%E6%95%B0%E5%88%97&#34;&gt;斐波那契数列&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;h2 id=&#34;数组&#34;&gt;数组&lt;/h2&gt;
&lt;h3 id=&#34;数组定义&#34;&gt;数组定义&lt;/h3&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;var 数组[数组大小]数据类型
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;数组长度固定,可以由0个或多个元素组成&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-golang&#34; data-lang=&#34;golang&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;arr1&lt;/span&gt; [&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;]&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; = [&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;]&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt;{&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;arr2&lt;/span&gt; = [&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;]&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt;{&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;//数组不确定长度，由...代替，长度由初始化的数据决定 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;arr3&lt;/span&gt; [&lt;span style=&#34;color:#f92672&#34;&gt;...&lt;/span&gt;]&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; = [&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;//指定索引值初始化;类型推断初始化
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;arr4&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:=&lt;/span&gt; [&lt;span style=&#34;color:#f92672&#34;&gt;...&lt;/span&gt;]&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt;{&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;} &lt;span style=&#34;color:#75715e&#34;&gt;//[0,1,0,5]
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Go（五）程序流程控制</title>
      <link>https://earchou123.github.io/post/go5/</link>
      <pubDate>Thu, 09 Mar 2023 18:14:37 +0800</pubDate>
      
      <guid>https://earchou123.github.io/post/go5/</guid>
      <description>&lt;!-- raw HTML omitted --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#if&#34;&gt;if&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#switch&#34;&gt;switch&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#for&#34;&gt;for&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#break&#34;&gt;break&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#continue&#34;&gt;continue&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E8%B7%B3%E8%BD%AC%E8%AF%AD%E5%8F%A5goto&#34;&gt;跳转语句goto&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E8%B7%B3%E8%BD%AC%E8%AF%AD%E5%8F%A5return&#34;&gt;跳转语句return&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E7%BB%83%E4%B9%A0&#34;&gt;练习&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#%E6%89%93%E5%8D%B0%E9%87%91%E5%AD%97%E5%A1%94&#34;&gt;打印金字塔&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E6%89%93%E5%8D%B0%E7%A9%BA%E5%BF%83%E7%9A%84%E9%87%91%E5%AD%97%E5%A1%94&#34;&gt;打印空心的金字塔&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E6%89%93%E5%8D%B0%E4%B9%98%E6%B3%95%E8%A1%A8&#34;&gt;打印乘法表&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E7%99%BB%E5%BD%95%E9%AA%8C%E8%AF%81%E5%AE%9E%E7%8E%B0%E6%9C%89%E4%B8%89%E6%AC%A1%E6%9C%BA%E4%BC%9A%E5%A6%82%E6%9E%9C%E7%94%A8%E6%88%B7%E5%90%8D%E4%B8%BAearchou%E5%AF%86%E7%A0%81%E4%B8%BA123%E6%8F%90%E7%A4%BA%E7%99%BB%E5%BD%95%E6%88%90%E5%8A%9F%E5%90%A6%E5%88%99%E6%8F%90%E7%A4%BA%E8%BF%98%E6%9C%89%E5%87%A0%E6%AC%A1%E6%9C%BA%E4%BC%9A&#34;&gt;登录验证实现，有三次机会，如果用户名为“earchou”，密码为“123”，提示登录成功，否则提示还有几次机会。&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;h2 id=&#34;if&#34;&gt;if&lt;/h2&gt;
&lt;p&gt;单分支&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;if 条件表达式{
    执行代码块
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;双分支&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;if 条件表达式{
    执行代码块
}else{
    执行代码块
}
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>Go（四）运算符</title>
      <link>https://earchou123.github.io/post/go4/</link>
      <pubDate>Tue, 07 Mar 2023 15:31:58 +0800</pubDate>
      
      <guid>https://earchou123.github.io/post/go4/</guid>
      <description>&lt;!-- raw HTML omitted --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#%E7%AE%97%E6%9C%AF%E8%BF%90%E7%AE%97%E7%AC%A6&#34;&gt;算术运算符&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E5%85%B3%E7%B3%BB%E8%BF%90%E7%AE%97%E7%AC%A6&#34;&gt;关系运算符&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E9%80%BB%E8%BE%91%E8%BF%90%E7%AE%97%E7%AC%A6&#34;&gt;逻辑运算符&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E4%BD%8D%E8%BF%90%E7%AE%97%E7%AC%A6&#34;&gt;位运算符&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E8%B5%8B%E5%80%BC%E8%BF%90%E7%AE%97%E7%AC%A6&#34;&gt;赋值运算符&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E7%BB%83%E4%B9%A0&#34;&gt;练习&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#%E6%9C%89%E4%B8%A4%E4%B8%AA%E5%8F%98%E9%87%8Fab%E8%A6%81%E6%B1%82%E5%85%B6%E8%BF%9B%E8%A1%8C%E4%BA%A4%E6%8D%A2%E4%BD%86%E6%98%AF%E4%B8%8D%E5%85%81%E8%AE%B8%E4%BD%BF%E7%94%A8%E4%B8%AD%E9%97%B4%E5%8F%98%E9%87%8F%E6%9C%80%E7%BB%88%E6%89%93%E5%8D%B0%E7%BB%93%E6%9E%9C&#34;&gt;有两个变量a,b，要求其进行交换，但是不允许使用中间变量，最终打印结果&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;h2 id=&#34;算术运算符&#34;&gt;算术运算符&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;运算符&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;+&lt;/td&gt;
&lt;td&gt;相加&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;相减&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;*&lt;/td&gt;
&lt;td&gt;相乘&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;/&lt;/td&gt;
&lt;td&gt;相除&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;%&lt;/td&gt;
&lt;td&gt;求余&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;注意： ++（自增）和&amp;ndash;（自减）在Go语言中是单独的语句，并不是运算符。go没有前++。
以下为错误用法&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Go（三）基础数据类型</title>
      <link>https://earchou123.github.io/post/go3/</link>
      <pubDate>Tue, 07 Mar 2023 14:31:58 +0800</pubDate>
      
      <guid>https://earchou123.github.io/post/go3/</guid>
      <description>&lt;!-- raw HTML omitted --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E6%80%BB%E8%A7%88&#34;&gt;数据类型总览&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#%E6%95%B0%E5%AD%97%E7%B1%BB%E5%9E%8B&#34;&gt;数字类型&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E6%B5%AE%E7%82%B9%E5%9E%8B&#34;&gt;浮点型&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E5%85%B6%E4%BB%96%E6%95%B0%E5%AD%97%E7%B1%BB%E5%9E%8B&#34;&gt;其他数字类型&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#bool%E7%B1%BB%E5%9E%8B&#34;&gt;bool类型&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%B1%BB%E5%9E%8B&#34;&gt;字符串类型&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E6%95%B0%E5%80%BC%E5%9E%8B&#34;&gt;数值型&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#%E6%95%B4%E5%9E%8B&#34;&gt;整型&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E6%B5%AE%E7%82%B9%E5%9E%8Bfloatfloat32float64&#34;&gt;浮点型float（float32、float64）&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E5%AD%97%E7%AC%A6%E7%B1%BB%E5%9E%8B&#34;&gt;字符类型&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E8%BD%AC%E6%8D%A2&#34;&gt;基本数据转换&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#tv&#34;&gt;Tv&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E5%9F%BA%E6%9C%AC%E7%B1%BB%E5%9E%8B%E8%BD%AC%E6%8D%A2%E6%88%90string&#34;&gt;基本类型转换成string&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#string%E8%BD%AC%E6%88%90%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B&#34;&gt;string转成基本数据类型&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;&lt;em&gt;详情看官网&lt;a href=&#34;https://go.dev/doc/effective_go#data&#34;&gt;https://go.dev/doc/effective_go#data&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&#34;数据类型总览&#34;&gt;数据类型总览&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;序号&lt;/th&gt;
&lt;th&gt;类型&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;Bool&lt;/td&gt;
&lt;td&gt;true or false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;int&lt;/td&gt;
&lt;td&gt;&lt;!-- raw HTML omitted --&gt;int&lt;!-- raw HTML omitted --&gt; &lt;!-- raw HTML omitted --&gt;float32&lt;!-- raw HTML omitted --&gt; &lt;!-- raw HTML omitted --&gt;float64&lt;!-- raw HTML omitted --&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;&lt;!-- raw HTML omitted --&gt;Go 的字符串是由单个字节连接起来的。&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;go语言字符串使用Utf-8编码标识Unicode文本&lt;!-- raw HTML omitted --&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;派生类&lt;/td&gt;
&lt;td&gt;&lt;!-- raw HTML omitted --&gt;指针（Pointer）&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;数组&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;结构体（struct）&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;通道（Channel）&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;函数&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;切片&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;接口（interface）&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;Map&lt;!-- raw HTML omitted --&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;</description>
    </item>
    
    <item>
      <title>Go（二）变量&amp;常量</title>
      <link>https://earchou123.github.io/post/go2/</link>
      <pubDate>Tue, 07 Mar 2023 13:34:58 +0800</pubDate>
      
      <guid>https://earchou123.github.io/post/go2/</guid>
      <description>&lt;!-- raw HTML omitted --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#%E5%8F%98%E9%87%8F&#34;&gt;变量&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#%E5%8F%98%E9%87%8F%E5%A3%B0%E6%98%8E&#34;&gt;变量声明&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E5%8F%98%E9%87%8F%E5%88%9D%E5%A7%8B%E5%8C%96&#34;&gt;变量初始化&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E5%B8%B8%E9%87%8F&#34;&gt;常量&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#%E5%B8%B8%E9%87%8F%E5%AE%9A%E4%B9%89&#34;&gt;常量定义&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#iota&#34;&gt;iota&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E5%80%BC%E7%B1%BB%E5%9E%8B%E5%92%8C%E5%BC%95%E7%94%A8%E7%B1%BB%E5%9E%8B&#34;&gt;值类型和引用类型&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#tips&#34;&gt;Tips&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;h2 id=&#34;变量&#34;&gt;变量&lt;/h2&gt;
&lt;h3 id=&#34;变量声明&#34;&gt;变量声明&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-golang&#34; data-lang=&#34;golang&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;name&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;string&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Go学习资源合集</title>
      <link>https://earchou123.github.io/post/go-learning/</link>
      <pubDate>Tue, 07 Mar 2023 13:33:20 +0800</pubDate>
      
      <guid>https://earchou123.github.io/post/go-learning/</guid>
      <description>&lt;ul&gt;
&lt;li&gt;官网&lt;br&gt;
&lt;a href=&#34;https://golang.org&#34;&gt;https://golang.org/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;标准库&lt;br&gt;
&lt;a href=&#34;https://golang.org/pkg/&#34;&gt;https://golang.org/pkg/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;go语言中文网 &lt;br&gt;
&lt;a href=&#34;https://studygolang.com/&#34;&gt;https://studygolang.com/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>Go（一）特点&amp;命名</title>
      <link>https://earchou123.github.io/post/go1/</link>
      <pubDate>Tue, 07 Mar 2023 13:31:58 +0800</pubDate>
      
      <guid>https://earchou123.github.io/post/go1/</guid>
      <description>&lt;!-- raw HTML omitted --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#go%E8%AF%AD%E8%A8%80%E8%AF%9E%E7%94%9F&#34;&gt;go语言诞生&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#go%E8%AF%AD%E8%A8%80%E7%9A%84%E7%89%B9%E7%82%B9&#34;&gt;go语言的特点&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E4%B8%8B%E8%BD%BD%E5%AE%89%E8%A3%85&#34;&gt;下载安装&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E9%85%8D%E7%BD%AE%E7%8E%AF%E5%A2%83&#34;&gt;配置环境&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#go%E5%B7%A5%E5%85%B7&#34;&gt;go工具&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E5%85%B3%E9%94%AE%E5%AD%97&#34;&gt;关键字&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E5%91%BD%E5%90%8D%E8%A7%84%E8%8C%83&#34;&gt;命名规范&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E4%BB%AA%E5%BC%8F%E6%84%9F--%E7%AC%AC%E4%B8%80%E4%B8%AAgo%E7%A8%8B%E5%BA%8F&#34;&gt;仪式感&amp;ndash;第一个go程序&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E5%85%B6%E4%BB%96%E5%B0%8Ftips&#34;&gt;其他小tips&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E7%BC%96%E8%BE%91%E5%99%A8&#34;&gt;编辑器&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;h2 id=&#34;go语言诞生&#34;&gt;go语言诞生&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;核心开发团队：Ken Thompson、Rob Pike、Robert Griesemer&lt;/li&gt;
&lt;li&gt;诞生原因：
&lt;ul&gt;
&lt;li&gt;计算机硬件频繁更新，性能提高很快。目前主流语言明显落后于硬件，不能合理使用&lt;strong&gt;多核CPU&lt;/strong&gt;的优势提升软件性能&lt;/li&gt;
&lt;li&gt;软件系统复杂程度越来越高，维护成本越来越高，目前缺少一个足够简洁高效的编程语言。&lt;/li&gt;
&lt;li&gt;企业运行维护很多c/c++的项目，虽然速度快，编译速度却很慢，同时存在内存泄露等一系列问题。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
  </channel>
</rss>
